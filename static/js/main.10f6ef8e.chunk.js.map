{"version":3,"sources":["modules/skilltree/action.ts","modules/app/action.ts","modules/skilltree/util.ts","dependencies.ts","modules/app/reducer.ts","modules/app/epic.ts","modules/skilltree/epic.ts","modules/skilltree/reducer.ts","store.ts","index.tsx"],"names":["SKILL_TREE_ACTION_TYPES","setSkillTreeData","data","type","SET_SKILL_TREE_DATA","payload","setSkillState","skill","SET_SKILL_STATE","selectSkill","SELECT_SKILL","APP_ACTION_TYPES","initApp","INIT","actionSuccess","ACTION_SUCCESS","getSkillFromData","originality","power","solidness","warm","find","x","name","calcEffect","effect","toExponential","calcTotalPoints","level","rank","points","i","calcPoint","length","initialState","initialized","appReducer","state","action","combineEpics","action$","state$","stateServices","pipe","ofType","map","flatMap","skillState","path","URL","window","location","href","searchParams","get","localStorage","save","JSON","parse","decodeURI","s","SkillList","push","error","debounceTime","switchMapTo","skillTree","take","stringify","Object","keys","encodeURI","history","pushState","document","origin","selectedSkill","skillTreeReducer","forEach","rootReducer","combineReducers","app","rootEpic","appEpic","skillTreeInitEpic","App","React","lazy","then","module","default","APP_ROOT","getElementById","ReactDOM","render","Suspense","fallback","component","props","store","dependencies","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","epicMiddleware","createEpicMiddleware","middlewares","createStore","applyMiddleware","run","configureStore"],"mappings":"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","file":"static/js/main.10f6ef8e.chunk.js","sourcesContent":["import { Action } from \"redux\";\r\nimport { ActionWithPayload } from \"../../utils/action\";\r\nimport { SkillTreeData, SkillState } from \"./type\";\r\n\r\nexport enum SKILL_TREE_ACTION_TYPES {\r\n  INIT = \"INIT\",\r\n  SET_SKILL_TREE_DATA = \"SET_SKILL_TREE_DATA\",\r\n  SET_SKILL_STATE = \"SET_SKILL_STATE\",\r\n  SELECT_SKILL = \"SELECT_SKILL\"\r\n}\r\n\r\nexport type InitAction = Action<SKILL_TREE_ACTION_TYPES.INIT>;\r\nexport type SetSkillTreeDataAction = ActionWithPayload<SKILL_TREE_ACTION_TYPES.SET_SKILL_TREE_DATA, SkillTreeData>;\r\nexport type SetSkillStateAction = ActionWithPayload<SKILL_TREE_ACTION_TYPES.SET_SKILL_STATE, SkillState[]>;\r\nexport type SelectSkillAction = ActionWithPayload<SKILL_TREE_ACTION_TYPES.SELECT_SKILL, string>;\r\n\r\nexport type SkillTreeActions = InitAction | SetSkillTreeDataAction | SetSkillStateAction | SelectSkillAction;\r\n\r\nexport const initSkillTree = (): InitAction => ({\r\n  type: SKILL_TREE_ACTION_TYPES.INIT\r\n});\r\n\r\nexport const setSkillTreeData = (data: SkillTreeData): SetSkillTreeDataAction => ({\r\n  type: SKILL_TREE_ACTION_TYPES.SET_SKILL_TREE_DATA,\r\n  payload: data\r\n});\r\n\r\nexport const setSkillState = (skill: SkillState[]): SetSkillStateAction => ({\r\n  type: SKILL_TREE_ACTION_TYPES.SET_SKILL_STATE,\r\n  payload: skill\r\n});\r\n\r\nexport const selectSkill = (skill: string): SelectSkillAction => ({\r\n  type: SKILL_TREE_ACTION_TYPES.SELECT_SKILL,\r\n  payload: skill\r\n});\r\n","import { Action } from \"redux\";\r\nimport { ActionWithPayload } from \"../../utils/action\";\r\n\r\nexport enum APP_ACTION_TYPES {\r\n  INIT = \"INIT\",\r\n  ERROR = \"ERROR\",\r\n  ACTION_SUCCESS = \"ACTION_SUCCESS\"\r\n}\r\n\r\nexport type InitAction = Action<APP_ACTION_TYPES.INIT>;\r\nexport type ErrorAction = ActionWithPayload<APP_ACTION_TYPES.ERROR, string>;\r\nexport type ActionSuccessAction = Action<APP_ACTION_TYPES.ACTION_SUCCESS>;\r\n\r\nexport type AppActions = InitAction | ErrorAction | ActionSuccessAction;\r\n\r\nexport const initApp = (): InitAction => ({\r\n  type: APP_ACTION_TYPES.INIT\r\n});\r\n\r\nexport const errorApp = (msg: string): ErrorAction => ({\r\n  type: APP_ACTION_TYPES.ERROR,\r\n  payload: msg\r\n});\r\n\r\nexport const actionSuccess = (): ActionSuccessAction => ({\r\n  type: APP_ACTION_TYPES.ACTION_SUCCESS\r\n});\r\n","import { SkillTreeData } from \"./type\";\r\n\r\nexport function getSkillFromData(data: SkillTreeData, skill: string) {\r\n  return [...data.originality, ...data.power, ...data.solidness, ...data.warm].find(x => x.name == skill);\r\n}\r\nexport function calcEffect(effect: number) {\r\n  if (effect > 1000000000000000) {\r\n    // 1.00e16\r\n    return effect.toExponential(2);\r\n  }\r\n  if (effect > 1000000000000) {\r\n    // 1T\r\n    return effect / 1000000000000 + \"T\";\r\n  }\r\n  if (effect > 1000000000) {\r\n    // 1B\r\n    return effect / 1000000000 + \"B\";\r\n  }\r\n  if (effect > 1000000) {\r\n    // 1M\r\n    return effect / 1000000 + \"M\";\r\n  }\r\n  if (effect > 1000) {\r\n    // 1K\r\n    return effect / 1000 + \"K\";\r\n  }\r\n\r\n  return effect;\r\n}\r\n\r\nexport function calcTotalPoints(level: number, rank: number) {\r\n  let points = 0;\r\n  for (let i = 1; i <= level; i++) {\r\n    points += calcPoint(i, rank);\r\n  }\r\n  return points;\r\n}\r\n\r\nexport function calcPoint(level: number, rank: number) {\r\n  if (level <= 0) return 0;\r\n\r\n  if (rank >= 1 && rank <= 3 && points[rank - 1].length >= level) {\r\n    return points[rank - 1][level - 1];\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nexport const points = [\r\n  [1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 8, 10, 12, 12, 14, 16, 18, 21, 24, 27, 30, 35, 40, 46, 52, 58, 64, 70],\r\n  [2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 8, 10, 12, 14, 16, 18, 21, 24, 28, 32, 36, 40, 45, 50, 55, 60, 66, 72, 80],\r\n  [3, 4, 5, 5, 6, 7, 7, 9, 12, 15, 18, 21, 25, 29, 33, 38, 43, 48, 54, 60, 68, 76, 86, 98, 0, 0, 0, 0, 0, 0]\r\n];\r\n","export const createDependencies = () => {\r\n  const stateServices = {};\r\n\r\n  return {\r\n    stateServices,\r\n  };\r\n};\r\n\r\nexport type Dependencies = ReturnType<typeof createDependencies>;\r\n","import { Reducer } from \"redux\";\r\nimport { AllActions } from \"../../store\";\r\nimport { APP_ACTION_TYPES } from \"./action\";\r\n\r\nexport interface AppState {\r\n  initialized: boolean;\r\n}\r\n\r\nexport const initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer: Reducer<AppState, AllActions> = (\r\n  state = initialState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case APP_ACTION_TYPES.INIT:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { Epic, StateObservable, ofType, combineEpics } from \"redux-observable\";\r\nimport { InitAction, APP_ACTION_TYPES, actionSuccess } from \"./action\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Action } from \"redux\";\r\nimport { StoreState } from \"../../store\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport const appInitEpic: Epic = (action$, state$: StateObservable<StoreState>, { stateServices }): Observable<Action<any>> =>\r\n  action$.pipe(\r\n    ofType<Action, InitAction>(APP_ACTION_TYPES.INIT),\r\n    map(x => {\r\n      return actionSuccess();\r\n    })\r\n  );\r\n\r\nexport default combineEpics(appInitEpic);\r\n","import { Epic, StateObservable, ofType, combineEpics } from \"redux-observable\";\r\nimport { SKILL_TREE_ACTION_TYPES, setSkillTreeData, SetSkillStateAction, setSkillState } from \"./action\";\r\nimport { map, debounceTime, switchMapTo, flatMap, take } from \"rxjs/operators\";\r\nimport { Action } from \"redux\";\r\nimport { StoreState } from \"../../store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { InitAction, APP_ACTION_TYPES } from \"../app/action\";\r\nimport SkillList from \"./skill-list.json\";\r\nimport { getSkillFromData, calcTotalPoints } from \"./util\";\r\nimport { SkillState } from \"./type\";\r\n\r\nexport const skillTreeInitEpic: Epic = (\r\n  action$,\r\n  state$: StateObservable<StoreState>,\r\n  { stateServices }\r\n): Observable<Action<any>> =>\r\n  action$.pipe(\r\n    ofType<Action, InitAction>(APP_ACTION_TYPES.INIT),\r\n    flatMap(() => {\r\n      let skillState: SkillState[] = [];\r\n\r\n      const path = (new URL(window.location.href)).searchParams.get(\"set\");\r\n      const data = localStorage[\"mikutap-skill-tree\"];\r\n\r\n      if (path || data) {\r\n        try {\r\n          const save = path && JSON.parse(decodeURI(path)) ? JSON.parse(decodeURI(path)) : JSON.parse(data);\r\n\r\n          if (save) {\r\n            for (var s in save) {\r\n              const data = getSkillFromData(SkillList, s);\r\n              if (data) {\r\n                skillState.push({\r\n                  name: s,\r\n                  level: save[s],\r\n                  points: calcTotalPoints(save[s], data.rank)\r\n                });\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          skillState = [];\r\n        }\r\n      }\r\n\r\n      return [setSkillTreeData(SkillList), setSkillState(skillState)];\r\n    })\r\n  );\r\n\r\nexport const skillStateEpic: Epic = (\r\n  action$,\r\n  state$: StateObservable<StoreState>,\r\n  { stateServices }\r\n): Observable<Action<any>> =>\r\n  action$.pipe(\r\n    ofType<Action, SetSkillStateAction>(SKILL_TREE_ACTION_TYPES.SET_SKILL_STATE),\r\n    debounceTime(200),\r\n    switchMapTo(\r\n      state$.pipe(\r\n        map(x => x.skillTree.skillState),\r\n        take(1)\r\n      )\r\n    ),\r\n    map(skillState => {\r\n      const save: any = {};\r\n\r\n      for (var s in skillState) {\r\n        save[s] = skillState[s].level;\r\n      }\r\n\r\n      localStorage[\"mikutap-skill-tree\"] = JSON.stringify(save);\r\n      const path = Object.keys(save).length == 0 ? \"\" : `?set=${encodeURI(JSON.stringify(save))}`;\r\n\r\n      window.history.pushState({}, \"\", `${(document.location as any).origin}/${path}`);\r\n\r\n      return setSkillTreeData(SkillList);\r\n    })\r\n  );\r\n\r\nexport default combineEpics(skillTreeInitEpic, skillStateEpic);\r\n","import { Reducer } from \"redux\";\r\nimport { AllActions } from \"../../store\";\r\nimport { SKILL_TREE_ACTION_TYPES } from \"./action\";\r\nimport { SkillTreeData, SkillState } from \"./type\";\r\n\r\nexport interface SkillTreeState {\r\n  data: SkillTreeData;\r\n  skillState: { [id: string]: SkillState };\r\n  selectedSkill: string;\r\n}\r\n\r\nexport const initialState: SkillTreeState = {\r\n  data: {\r\n    originality: [],\r\n    warm: [],\r\n    solidness: [],\r\n    power: []\r\n  },\r\n  skillState: {},\r\n  selectedSkill: \"\"\r\n};\r\n\r\nconst skillTreeReducer: Reducer<SkillTreeState, AllActions> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SKILL_TREE_ACTION_TYPES.SET_SKILL_TREE_DATA:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      };\r\n    case SKILL_TREE_ACTION_TYPES.SELECT_SKILL:\r\n      return {\r\n        ...state,\r\n        selectedSkill: action.payload\r\n      };\r\n    case SKILL_TREE_ACTION_TYPES.SET_SKILL_STATE:\r\n      if (action.payload.length == 0)\r\n        return {\r\n          ...state,\r\n          skillState: {}\r\n        };\r\n\r\n      const skillState = {\r\n        ...state.skillState\r\n      };\r\n\r\n      action.payload.forEach(x => {\r\n        if (x.level != 0) skillState[x.name] = x;\r\n        else delete skillState[x.name];\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        skillState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default skillTreeReducer;\r\n","import { combineReducers, compose, Middleware, createStore, applyMiddleware } from \"redux\";\r\nimport { combineEpics, createEpicMiddleware } from \"redux-observable\";\r\nimport { AppActions } from \"./modules/app/action\";\r\nimport appReducer, { AppState } from \"./modules/app/reducer\";\r\nimport appEpic from \"./modules/app/epic\";\r\nimport skillTreeInitEpic from \"./modules/skilltree/epic\";\r\nimport skillTreeReducer, { SkillTreeState } from \"./modules/skilltree/reducer\";\r\nimport { SkillTreeActions } from \"./modules/skilltree/action\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\r\n  }\r\n}\r\n\r\nexport interface StoreState {\r\n  app: AppState;\r\n  skillTree: SkillTreeState\r\n}\r\n\r\nexport const rootReducer = combineReducers({ app: appReducer, skillTree: skillTreeReducer });\r\n\r\nexport const rootEpic = combineEpics(appEpic, skillTreeInitEpic);\r\n\r\nexport type AllActions = AppActions | SkillTreeActions;\r\n\r\nexport type GlobalState = ReturnType<typeof rootReducer>;\r\n\r\nexport function configureStore(dependencies: any) {\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const epicMiddleware = createEpicMiddleware({ dependencies });\r\n\r\n  const middlewares: Middleware[] = [epicMiddleware];\r\n\r\n  const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\r\n\r\n  epicMiddleware.run(rootEpic);\r\n\r\n  return store;\r\n}\r\n","import { createDependencies } from \"./dependencies\";\r\nimport { configureStore } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"./styles/global.scss\";\r\nimport 'primereact/resources/themes/md-light-indigo/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nconst App = React.lazy(() => import(\"./modules/app/\").then(module => ({default: module.App})))\r\n\r\nconst APP_ROOT = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <BrowserRouter /*basename=\"/axy\"*/>\r\n    <React.Suspense fallback={<div>Loading...</div>}>\r\n      <Switch>\r\n        <Route\r\n          path=\"/\"\r\n          component={(props: any) => {\r\n            const dependencies = createDependencies();\r\n            const store = configureStore(dependencies);\r\n            return (\r\n              <Provider store={store}>\r\n                <App />\r\n              </Provider>\r\n            );\r\n          }}\r\n        />\r\n      </Switch>\r\n    </React.Suspense>\r\n  </BrowserRouter>,\r\n\r\n  APP_ROOT\r\n);\r\n"],"sourceRoot":""}