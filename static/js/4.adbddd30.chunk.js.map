{"version":3,"sources":["modules/app/App.styled.ts","modules/skilltree/SkillTree.styled.ts","modules/skilltree/skillbranch/SkillBranch.styled.ts","modules/skilltree/skill/Skill.styled.ts","modules/skilltree/skill/Skill.tsx","modules/skilltree/lines/Line.styled.ts","modules/skilltree/lines/Line.tsx","modules/skilltree/skillbranch/SkillBranch.container.ts","modules/skilltree/skillbranch/SkillBranch.tsx","modules/skilltree/SkillTree.container.ts","modules/skilltree/SkillTree.tsx","modules/app/selector.ts","modules/app/App.container.ts","modules/app/App.tsx"],"names":["Container","styled","div","Skill","data","skill","onClick","name","className","level","max","Line","type","lines","connect","state","skillsState","skillTree","skillState","dispatch","onSelectSkill","selectSkill","onClear","setSkillState","skills","length","id","sum","i","points","sumLevel","icon","disabled","x","sumTotalPoints","style","width","right","copy","window","location","href","skillData","selectedSkill","onSkillUpdate","useState","activeIndex","setActiveIndex","getSkillFromData","onTabChange","e","index","header","originality","warm","solidness","power","dismissableMask","closeOnEscape","visible","maxWidth","footer","calcPoint","rank","onHide","effects","map","key","info","calcEffect","effect","filter","description","selectInitialized","createSelector","app","initialized","onInit","initApp","useEffect"],"mappings":"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","file":"static/js/4.adbddd30.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div``;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  .p-tabview-nav-link {\r\n    padding: 1rem !important;\r\n  }\r\n\r\n  .p-dialog {\r\n    .p-dialog-content {\r\n      .header {\r\n        margin-bottom: 10px;\r\n      }\r\n      .info {\r\n        margin-bottom: 10px;\r\n      }\r\n      .desc {\r\n      }\r\n    }\r\n    .p-dialog-footer {\r\n      *:first-child {\r\n        float: left;\r\n      }\r\n      .p-button {\r\n        min-width: 70px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  .header {\r\n    display: flex;\r\n    position: relative;\r\n    margin-bottom: 10px;\r\n\r\n    .name {\r\n      font-weight: bolder;\r\n      margin-right: 10px;\r\n    }\r\n\r\n    *:last-child {\r\n      margin-left: auto;\r\n    }\r\n\r\n    .p-button {\r\n      position: absolute;\r\n      top: 30px;\r\n      width: 85px;\r\n      z-index: 10000;\r\n    }\r\n  }\r\n\r\n  .tree {\r\n    position: relative;\r\n    .branches {\r\n      position: absolute;\r\n      left: 50%;\r\n      transform: translate(-50%, 0);\r\n\r\n      .row {\r\n        display: flex;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  border: 1px solid black;\r\n  height: 75px;\r\n  width: 75px;\r\n\r\n  position: relative;\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  .level {\r\n    margin-top: auto;\r\n    text-align: end;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Container } from \"./Skill.styled\";\r\nimport { SkillData, SkillState } from \"../type\";\r\n\r\nexport interface StateProps {\r\n  data: SkillData;\r\n  skill: SkillState;\r\n}\r\n\r\nexport interface DispatchProps {\r\n  onClick: (skill: string) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nexport const Skill: React.FC<Props> = ({ data, skill, onClick }) => {\r\n  return (\r\n    <Container\r\n      onClick={() => {\r\n        if (!skill) onClick(data.name);\r\n        else onClick(skill.name);\r\n      }}>\r\n      <div>{data.name}</div>\r\n      <div className=\"level\">{skill?.level == data.max ? \"MAX\" : skill?.level}</div>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  height: 75px;\r\n  width: 76px;\r\n  position: relative;\r\n  display: flex;\r\n\r\n  .horizontal {\r\n    margin-top: 50%;\r\n    height: 50%;\r\n    width: 100%;\r\n    border-top: 1px solid black;\r\n  }\r\n  .vertical {\r\n    height: 100%;\r\n    width: 50%;\r\n    border-right: 1px solid black;\r\n  }\r\n  .h {\r\n    margin-top: 50%;\r\n    height: 50%;\r\n    width: 100%;\r\n    border-top: 1px solid black;\r\n    position: absolute;\r\n  }\r\n  .v {\r\n    height: 100%;\r\n    width: 50%;\r\n    border-right: 1px solid black;\r\n    position: absolute;\r\n  }\r\n  .left {\r\n    margin-top: 50%;\r\n    height: 50%;\r\n    width: 50%;\r\n    border-right: 1px solid black;\r\n    border-top: 1px solid black;\r\n  }\r\n\r\n  .right {\r\n    margin-top: 50%;\r\n    margin-left: 50%;\r\n    height: 50%;\r\n    width: 50%;\r\n    border-left: 1px solid black;\r\n    border-top: 1px solid black;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Container } from \"./Line.styled\";\r\n\r\nexport interface StateProps {\r\n  type: number;\r\n}\r\n\r\nexport interface DispatchProps {}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nexport const Line: React.FC<Props> = ({ type }) => {\r\n  return <Container>{lines(type)}</Container>;\r\n};\r\n\r\nconst lines = (type: number) => {\r\n  switch (type) {\r\n    case 0:\r\n      return <div className=\"\"></div>;\r\n    case 1:\r\n      return (\r\n        <>\r\n          <div className=\"horizontal\" />\r\n        </>\r\n      );\r\n    case 2:\r\n      return (\r\n        <>\r\n          <div className=\"vertical\" />\r\n        </>\r\n      );\r\n    case 3:\r\n      return (\r\n        <>\r\n          <div className=\"h\" />\r\n          <div className=\"v\" />\r\n        </>\r\n      );\r\n    case 4:\r\n      return (\r\n        <>\r\n          <div className=\"left\" />\r\n        </>\r\n      );\r\n    case 5:\r\n      return (\r\n        <>\r\n          <div className=\"right\" />\r\n        </>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","import { StateProps, DispatchProps, SkillBranch } from \"./SkillBranch\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { GlobalState } from \"../../../store\";\r\nimport { setSkillState, selectSkill } from \"../action\";\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  skillsState: state.skillTree.skillState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\r\n  onSelectSkill: skill => dispatch(selectSkill(skill)),\r\n  onClear: () => dispatch(setSkillState([]))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkillBranch);\r\n","import React, { useState } from \"react\";\r\nimport { Container } from \"./SkillBranch.styled\";\r\nimport { SkillData, SkillState } from \"../type\";\r\nimport { Skill } from \"../skill/Skill\";\r\nimport { Line } from \"../lines/Line\";\r\nimport { Button } from \"primereact/button\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nexport interface LocalProps {\r\n  name: string;\r\n  skills: SkillData[];\r\n}\r\n\r\nexport interface StateProps {\r\n  skillsState: { [id: string]: SkillState };\r\n}\r\n\r\nexport interface DispatchProps {\r\n  onSelectSkill: (skill: string) => void;\r\n  onClear: () => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nexport const SkillBranch: React.FC<Props & LocalProps> = ({ name, skills, skillsState, onSelectSkill, onClear }) => {\r\n  if (skills.length < 1) return <div>Empty!</div>;\r\n\r\n  function sumLevel() {\r\n    let sum = 0;\r\n    for (let i = 0; i < 10; i++) {\r\n      if (skillsState[skills[i].name]) sum += skillsState[skills[i].name].points;\r\n    }\r\n\r\n    return sum;\r\n  }\r\n\r\n  function sumTotalPoints() {\r\n    let sum = 0;\r\n    for (var x in skillsState) {\r\n      sum += skillsState[x].points;\r\n    }\r\n\r\n    return sum;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div id=\"header\" className=\"header\">\r\n        <div className=\"name\">{name}</div>\r\n        <div className=\"level\">Lv.{sumLevel()}</div>\r\n        <Button icon=\"pi\" disabled={skills.length < 1} onClick={() => onClear()}>\r\n          Clear All\r\n        </Button>\r\n        <div>\r\n          <div>{`Total Skill Points: ${sumTotalPoints()}`}</div>\r\n          <Button\r\n            icon=\"pi\"\r\n            style={{ width: \"50px\", right: 0 }}\r\n            disabled={skills.length < 1}\r\n            onClick={() => {\r\n              copy(window.location.href);\r\n            }}>\r\n            Copy\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"tree\">\r\n        <div id=\"body\" className=\"branches\">\r\n          <div className=\"row\">\r\n            <Line type={0} />\r\n            <Line type={0} />\r\n            <Skill data={skills[0]} skill={skillsState[skills[0].name]} onClick={onSelectSkill} />\r\n            <Line type={0} />\r\n            <Line type={0} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Line type={5} />\r\n            <Line type={1} />\r\n            <Line type={3} />\r\n            <Line type={1} />\r\n            <Line type={4} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Skill data={skills[1]} skill={skillsState[skills[1].name]} onClick={onSelectSkill} />\r\n            <Line type={0} />\r\n            <Skill data={skills[4]} skill={skillsState[skills[4].name]} onClick={onSelectSkill} />\r\n            <Line type={0} />\r\n            <Skill data={skills[7]} skill={skillsState[skills[7].name]} onClick={onSelectSkill} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Line type={2} />\r\n            <Line type={0} />\r\n            <Line type={2} />\r\n            <Line type={0} />\r\n            <Line type={2} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Skill data={skills[2]} skill={skillsState[skills[2].name]} onClick={onSelectSkill} />\r\n            <Line type={0} />\r\n            <Skill data={skills[5]} skill={skillsState[skills[5].name]} onClick={onSelectSkill} />\r\n            <Line type={0} />\r\n            <Skill data={skills[8]} skill={skillsState[skills[8].name]} onClick={onSelectSkill} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Line type={2} />\r\n            <Line type={0} />\r\n            <Line type={2} />\r\n            <Line type={0} />\r\n            <Line type={2} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Skill data={skills[3]} skill={skillsState[skills[3].name]} onClick={onSelectSkill} />\r\n            <Line type={0} />\r\n            <Skill data={skills[6]} skill={skillsState[skills[6].name]} onClick={onSelectSkill} />\r\n            <Line type={0} />\r\n            <Skill data={skills[9]} skill={skillsState[skills[9].name]} onClick={onSelectSkill} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import { StateProps, DispatchProps, SkillTree } from \"./SkillTree\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { GlobalState } from \"../../store\";\r\nimport { selectData } from \"./selector\";\r\nimport { selectSkill, setSkillState } from \"./action\";\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  skillData: state.skillTree.data,\r\n  selectedSkill: state.skillTree.selectedSkill,\r\n  skillState: state.skillTree.skillState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\r\n  onSelectSkill: () => dispatch(selectSkill(\"\")),\r\n  onSkillUpdate: skill => dispatch(setSkillState([skill]))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkillTree);\r\n","import React, { useState } from \"react\";\r\nimport { Container } from \"./SkillTree.styled\";\r\nimport { TabView, TabPanel } from \"primereact/tabview\";\r\nimport { SkillTreeData, SkillState } from \"./type\";\r\nimport { SkillBranch } from \"./skillbranch\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Button } from \"primereact/button\";\r\nimport { getSkillFromData, calcEffect, calcPoint } from \"./util\";\r\n\r\nexport interface StateProps {\r\n  skillData: SkillTreeData;\r\n  skillState: { [id: string]: SkillState };\r\n  selectedSkill: string;\r\n}\r\n\r\nexport interface DispatchProps {\r\n  onSelectSkill: () => void;\r\n  onSkillUpdate: (skill: SkillState) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nexport const SkillTree: React.FC<Props> = ({\r\n  skillData,\r\n  selectedSkill,\r\n  skillState,\r\n  onSelectSkill,\r\n  onSkillUpdate\r\n}) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  const data = getSkillFromData(skillData, selectedSkill)\r\n\r\n  const skill = skillState[selectedSkill]\r\n    ? skillState[selectedSkill]\r\n    : ({ name: data?.name, level: 0, points: 0 } as SkillState);\r\n\r\n  function header() {\r\n    return `${selectedSkill}`;\r\n  }\r\n\r\n  function body() {\r\n    if (!data || selectedSkill == \"\") return null;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"header\">\r\n          <div>Lv.{skill.level}</div>\r\n          <div>Points: {skill.points}</div>\r\n        </div>\r\n        <div className=\"info\">\r\n          {data.effects.map(x => (\r\n            <div key={x.info}>{`${x.info}${calcEffect(x.effect[skill.level])}${x.type}`}</div>\r\n          ))}\r\n        </div>\r\n        <div className=\"desc\">\r\n          {data.effects\r\n            .filter(x => x.description != \"\")\r\n            .map(x => (\r\n              <div key={x.description}>&#9654;{`${x.description}`}</div>\r\n            ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function footer() {\r\n    if (!data || selectedSkill == \"\") return null;\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          icon=\"pi\"\r\n          disabled={skill.level < 1}\r\n          onClick={() => {\r\n            onSkillUpdate({ ...skill, level: 0, points: 0 });\r\n          }}>\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          icon=\"pi\"\r\n          disabled={skill.level < 1}\r\n          onClick={() => {\r\n            const level = skill.level - 1;\r\n            const points = skill.points - calcPoint(skill.level, data.rank);\r\n\r\n            onSkillUpdate({ ...skill, level, points });\r\n          }}>\r\n          {skill.level < 1 ? \"MIN\" : `- ${calcPoint(skill.level, data.rank)}`}\r\n        </Button>\r\n        <Button\r\n          icon=\"pi\"\r\n          disabled={skill.level >= data.max && data.max > 0}\r\n          onClick={() => {\r\n            const level = skill.level + 1;\r\n            const points = skill.points + calcPoint(level, data.rank);\r\n\r\n            onSkillUpdate({ ...skill, level, points });\r\n          }}>\r\n          {skill.level >= data.max && data.max > 0 ? \"MAX\" : `+ ${calcPoint(skill.level + 1, data.rank)}`}\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function dialog() {\r\n    return (\r\n      <Dialog\r\n        className=\"dialog\"\r\n        header={header()}\r\n        dismissableMask={true}\r\n        closeOnEscape={true}\r\n        visible={selectedSkill != \"\"}\r\n        style={{ width: \"100%\", maxWidth: \"500px\" }}\r\n        footer={footer()}\r\n        onHide={() => onSelectSkill()}>\r\n        {body()}\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TabView activeIndex={activeIndex} onTabChange={e => setActiveIndex(e.index)}>\r\n        <TabPanel header=\"Originality\">\r\n          <SkillBranch name={\"Originality\"} skills={skillData.originality} />\r\n        </TabPanel>\r\n        <TabPanel header=\"Warmth\">\r\n          <SkillBranch name={\"Warmth\"} skills={skillData.warm} />\r\n        </TabPanel>\r\n        <TabPanel header=\"Solidness\">\r\n          <SkillBranch name={\"Solidness\"} skills={skillData.solidness} />\r\n        </TabPanel>\r\n        <TabPanel header=\"Power\">\r\n          <SkillBranch name={\"Power\"} skills={skillData.power} />\r\n        </TabPanel>\r\n      </TabView>\r\n      {dialog()}\r\n    </Container>\r\n  );\r\n};\r\n","import { GlobalState } from \"../../store\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nexport const selectApp = (state: GlobalState) => state.app;\r\n\r\nexport const selectInitialized = createSelector(\r\n  selectApp,\r\n  ({ initialized }) => !!initialized\r\n);\r\n","import { StateProps, DispatchProps, App } from \"./App\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { GlobalState } from \"../../store\";\r\nimport { selectInitialized } from \"./selector\";\r\nimport { initApp } from \"./action\";\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  initialized: selectInitialized(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\r\n  onInit: () => dispatch(initApp()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"./App.styled\";\r\nimport { SkillTree } from \"../skilltree\";\r\nexport interface StateProps {\r\n  initialized: boolean;\r\n}\r\n\r\nexport interface DispatchProps {\r\n  onInit: () => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nexport const App: React.FC<Props> = ({ initialized, onInit }) => {\r\n  useEffect(() => {\r\n    onInit();\r\n  }, []);\r\n\r\n  if (!initialized) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SkillTree />\r\n    </Container>\r\n  );\r\n};\r\n"],"sourceRoot":""}